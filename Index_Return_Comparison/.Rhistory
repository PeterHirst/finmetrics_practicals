cumreturns_financials %>%
group_by(country) %>%
ggplot() +
geom_line(aes(x=date, y=mean(monthly_cumreturns), colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials %>%
group_by(country) %>%
ggplot() +
geom_line(aes(x=date, y=(mean(monthly_cumreturns)), colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
group_by(country, ticker) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted)) %>%
group_by(date, country) %>%
summarise(mean(monthly_cumreturns)) %>%
group_by(date, country) %>%
ungroup()
View(cumreturns_financials)
cumreturns_financials %>%
group_by(country) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
library("ggplot2")
cumreturns_financials %>%
group_by(country) %>%
ggplot() +
geom_line(aes(x=date, y=(mean(monthly_cumreturns)), colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
group_by(country, ticker) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted)) %>%
group_by(date, country) %>%
ungroup()
View(cumreturns_financials)
cumreturns_financials %>%
group_by(date, country) %>%
print(cumreturns_financials)
View(data)
monthlyreturns <-
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
ungroup() %>%
#Calculate the monthly returns
group_by(ticker) %>%
mutate(monthly_returns = index/lag(index) - 1) %>%
mutate(monthly_returns = coalesce(monthly_returns, 0)) %>%
ungroup() %>%
# Next we want to add up the market cap by sector
group_by(country, sector, date) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
mutate(weight= cap/sector_cap) %>% #delete this?
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
mutate(weighted_index_return = sum(monthly_returns*weight))
summarise(weighted_monthly_returns = mean(weighted_index_return))
summarise(weighted_monthly_returns = mean(weighted_index_return))
monthlyreturns <-
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
ungroup() %>%
#Calculate the monthly returns
group_by(ticker) %>%
mutate(monthly_returns = index/lag(index) - 1) %>%
mutate(monthly_returns = coalesce(monthly_returns, 0)) %>%
ungroup() %>%
# Next we want to add up the market cap by sector
group_by(country, sector, date) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
#mutate(weight= cap/sector_cap) %>% #delete this?
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
mutate(weighted_index_return = sum(monthly_returns*weight))
monthlyreturns <-
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
ungroup() %>%
#Calculate the monthly returns
group_by(ticker) %>%
mutate(monthly_returns = index/lag(index) - 1) %>%
mutate(monthly_returns = coalesce(monthly_returns, 0)) %>%
ungroup() %>%
# Next we want to add up the market cap by sector
group_by(country, sector, date) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
#mutate(weight= cap/sector_cap) %>% #delete this?
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
mutate(weighted_index_return = sum(monthly_returns*weight)) %>%
summarise(weighted_monthly_returns = mean(weighted_index_return))
monthlyreturns <-
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
ungroup() %>%
#Calculate the monthly returns
group_by(ticker) %>%
mutate(monthly_returns = index/lag(index) - 1) %>%
mutate(monthly_returns = coalesce(monthly_returns, 0)) %>%
ungroup() %>%
# Next we want to add up the market cap by sector
group_by(country, sector, date) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
mutate(weight= cap/sector_cap) %>% #delete this?
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
mutate(weighted_index_return = sum(monthly_returns*weight)) %>%
summarise(weighted_monthly_returns = mean(weighted_index_return))
View(monthlyreturns)
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
group_by(country, ticker) %>%
mutate(monthly_cumreturns = cumprod( 1 + weighted_monthly_returns)) %>%
group_by(date, country) %>%
ungroup()
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
group_by(country) %>%
mutate(monthly_cumreturns = cumprod( 1 + weighted_monthly_returns)) %>%
group_by(date, country) %>%
ungroup()
View(cumreturns_financials)
library("ggplot2")
#cumreturns_financials %>%
# group_by(date, country) %>%
#print(cumreturns_financials)
cumreturns_financials %>%
group_by(country) %>%
ggplot() +
geom_line(aes(x=date, y=(monthlyreturns, colour = country)) +
library("ggplot2")
cumreturns_financials %>%
group_by(country) %>%
ggplot() +
geom_line(aes(x=date, y=(monthly_cumreturns, colour = country)) +
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=(monthly_cumreturns, colour = country) +
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials %>%
library("ggplot2")
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = F, size = F)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = F, size = F)
View(plot_cumreturns_financials)
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = F, size = F)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F)
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F) %>%
View(plot_cumreturns_financials)
View(plot_cumreturns_financials)
#cumreturns_financials %>%
# group_by(date, country) %>%
#print(cumreturns_financials)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F) %>%
View(plot_cumreturns_financials) %>%
print(plot_cumreturns_financials)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F) %>%
View(plot_cumreturns_financials) %>%
print("plot_cumreturns_financials")
#cumreturns_financials %>%
# group_by(date, country) %>%
#print(cumreturns_financials)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F) %>%
print(plot_cumreturns_financials)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F) %>%
print(plot_cumreturns_financials)
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F)
print(plot_cumreturns_financials)
monthlyreturns %>%
mutate(Sharpe = mean(weighted_monthly_returns)/sd(weighted_monthly_returns))
Sharpe_ratios <-
monthlyreturns %>%
mutate(Sharpe = mean(weighted_monthly_returns)/sd(weighted_monthly_returns)) %>%
print(Sharpe)
Sharpe_ratios <-
monthlyreturns %>%
mutate(Sharpe = mean(weighted_monthly_returns, na.rm = T)/sd(weighted_monthly_returns, na.rm = T)) %>%
print(Sharpe)
Sharpe_ratios <-
monthlyreturns %>%
mutate(Sharpe = mean(weighted_monthly_returns)/sd(weighted_monthly_returns)) %>%
print(Sharpe)
Sharpe_ratios <-
monthlyreturns %>%
mutate(Sharpe = mean(weighted_monthly_returns, na.rm = T)/sd(weighted_monthly_returns, na.rm = T)) %>%
print(Sharpe)
library("PerformanceAnalytics")
library("xts", "zoo")
library("PerformanceAnalytics")
library("xts", "zoo")
monthlyreturns %>%
filter(sector %in% c("Materials")) %>%
group_by(country)
library("PerformanceAnalytics")
library("xts", "zoo", "tbl_xts")
View(data)
dailyreturns_materials <-
data %>%
filter(sector %in% c("Materials")) %>%
group_by(country, ticker, date) %>%
tbl2xts::tbl_xts()
data %>%
filter(sector %in% c("Materials")) %>%
group_by(country, ticker, date)
data %>%
group_by(country, ticker, date) %>%
tbl2xts::tbl_xts()
data %>%
filter(sector %in% c("Materials"))
data %>%
filter(sector %in% c("Materials"))
data %>%
filter(sector %in% c("Materials"))
library("PerformanceAnalytics")
library("xts", "zoo", "tbl_xts")
data %>%
filter(sector %in% c("Materials"))
data %>%
filter(sector %in% c("Materials"))
View(data)
data %>%
group_by(country, sector, ticker, date)
data %>%
group_by(country, sector, ticker, date) %>%
filter(sector %in% c("Materials"))
data %>%
group_by(country, sector, ticker, date) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_return = index/lag(index) -1)
data %>%
group_by(country, sector, ticker, date) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_return = index/lag(index) -1)
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_return = index/lag(index) -1)
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_return = index/lag(index) -1) %>%
ungroup() %>%
group_by(country, date)
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_return = index/lag(index) -1) %>%
ungroup() %>%
group_by(date, country)
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_return = index/lag(index) -1) %>%
ungroup() %>%
group_by(date, ticker)
data %>%
filter(sector %in% c("Materials")) %>%
group_by(ticker) %>%
mutate(daily_return = index/lag(index) -1) %>%
filter(sector %in% c("Materials")) %>%
group_by(ticker) %>%
mutate(daily_return = index/lag(index) -1)
filter(sector %in% c("Materials")) %>%
group_by(ticker) %>%
mutate(daily_return = index/lag(index) -1) %>%
ungroup() %>%
data %>%
filter(sector %in% c("Materials")) %>%
group_by(ticker) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup()
data %>%
filter(sector %in% c("Materials"))
data %>%
filter(sector %in% c("Materials"))
data %>%
filter(sector %in% "Materials") %>%
group_by(ticker) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup()
data %>%
filter(sector %in% "materials") %>%
group_by(ticker) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup()
data %>%
filter(sector %in% "materials") %>%
group_by(ticker) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup()
View(data)
data %>%
filter(sector == "Materials") %>%
group_by(ticker) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup()
data %>%
filter(sector == "Materials")
View(data)
data %>%
filter(sector == "Materials") %>%
group_by(ticker)
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup()
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup() %>%
tbl_xts(.,cols_to_xts = "mean_daily_returns", spread_by = "country")
library("PerformanceAnalytics")
library("xts", "zoo", "tbl_xts")
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup() %>%
tbl_xts(.,cols_to_xts = "mean_daily_returns", spread_by = "country")
library("PerformanceAnalytics")
library("xts", "zoo", "tbl_xts")
library("rmsfuns")
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup() %>%
tbl_xts(.,cols_to_xts = "mean_daily_returns", spread_by = "country")
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup() %>%
tbl2xts::tbl_xts(.,cols_to_xts = "mean_daily_returns", spread_by = "country")
xts_dailyreturns_materials <-
data %>%
group_by(ticker) %>%
filter(sector %in% c("Materials")) %>%
mutate(daily_returns = index/lag(index) -1) %>%
mutate(daily_returns = coalesce(daily_returns, 0)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_daily_returns = mean(daily_returns)) %>%
ungroup() %>%
tbl2xts::tbl_xts(.,cols_to_xts = "mean_daily_returns", spread_by = "country")
View(xts_dailyreturns_materials)
chart.RollingPerformance(xts_dailyreturns_materials, FUN = "sd", width = 60, main = "Rolling 60 day sd of the materials sector", legend.loc = "bottom left")
chart.RollingPerformance(xts_dailyreturns_materials, FUN = "sd", width = 4, main = "Rolling 60 day sd of the materials sector", legend.loc = "bottom left")
chart.RollingPerformance(xts_dailyreturns_materials, FUN = "sd", width = 4, main = "Rolling 60 day sd of the materials sector", legend.loc = "top middle")
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F)
print(plot_cumreturns_financials)
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
guides(colour = T, size = F)
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country))
plot_cumreturns_financials <-
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country))
print(plot_cumreturns_financials)
install.packages("tikzDevice")
library(tikzDevice)
library(ggplot2)
y <- exp(seq(1,10,.1))
x <- 1:length(y)
data <- data.frame(x = x, y = y)
#Create a .tex file that will contain your plot as vectors
#You need to set the size of your plot here, if you do it in LaTeX, font consistency with the rest of the document will be lost
tikz(file = "plot_test.tex", width = 5, height = 5)
#Simple plot of the dummy data using LaTeX elements
plot <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
#Space does not appear after Latex
ggtitle( paste("Fancy \\LaTeX ", "\\hspace{0.01cm} title")) +
labs( x = "$x$ = Time", y = "$\\Phi$ = Innovation output") +
theme_bw()
#This line is only necessary if you want to preview the plot right after compiling
print(plot)
#Necessary to close or the tikxDevice .tex file will not be written
dev.off()
1
