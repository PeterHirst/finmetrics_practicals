library(tidyverse)
Daily_TRI <-
read_rds("data/Fin_Data_SA_US_NKY.rds")
View(Daily_TRI)
Daily_TRI %>% head()
library(rmsfuns)
library(lubridate)
Daily_TRI %>% pull(Short.Name ) %>% unique() %>% View
Daily_TRI_BigthreeTech <-
Daily_TRI %>%
filter(Short.Name %in% c( "NASPERS LTD-N", "APPLE INC", "ALPHABET INC-A")) %>%
group_by(Ticker) %>% mutate(Returns = TRI/lag(TRI) - 1) %>% ungroup()
View(Daily_TRI_BigthreeTech)
Daily_TRI_BigthreeTech %>%
mutate(Returns = coalesce(Returns, 0)) %>%  # Override Return column NAs...
group_by(Ticker) %>%
mutate(Cum_Return = cumprod( 1 + Returns))
View(Daily_TRI_BigthreeTech)
Daily_TRI_BigthreeTech_with_cumulative_returns <-
Daily_TRI_BigthreeTech %>%
mutate(Returns = coalesce(Returns, 0)) %>%  # Override Return column NAs...
group_by(Ticker) %>%
mutate(Cum_Return = cumprod( 1 + Returns))
View(Daily_TRI_BigthreeTech_with_cumulative_returns)
View(Daily_TRI)
Daily_TRI <- rename(data)
Daily_TRI %>%
group_by(BICS_LEVEL_1_SECTOR_NAME) %>%
group_by(Universe)
data <- Daily_TRI
View(data)
names(data) <- c("data", "index", "short_name", "cap", "sector", "industry", "country")
View(data)
View(data)
rm(data)
data <- Daily_TRI
View(data)
names(data) <- c("date", "ticker" "index", "name", "cap", "sector", "industry", "country")
names(data) <- c("date", "ticker", "index", "name", "cap", "sector", "industry", "country")
View(data)
data %>% mutate(Year_Month = format(Date, "%Y%B")) %>%
group_by(Year_Month, Ticker) %>%
data %>% mutate(Year_Month = format(Date, "%Y%B")) %>%
group_by(Year_Month, Ticker) %>% head()
data %>% mutate(Year_Month = format(date, "%Y%B")) %>%
group_by(Year_Month, Ticker) %>% head()
data %>% mutate(Year_Month = format(date, "%Y%B")) %>%
group_by(Year_Month, Ticker) %>%
head()
data %>% mutate(Year_Month = format(date, "%Y%B")) %>%
group_by(Year_Month, sector) %>%
head()
data %>%
mutate(Year_Month = format(date, "%Y%B")) %>%
group_by(Year_Month, ticker)
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker)
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
#Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date))
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
#Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
#Next we want to add up the market cap by sector
group_by(sector)
market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap))
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
#Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
#Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap))
View(data)
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
# Now we can go ahead an calculate the monthly returns
mutate(monthly_returns_weighted = weighted_index- lag(weighted_index) - 1)
View(data)
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
# Now we can go ahead an calculate the monthly returns
mutate(monthly_returns_weighted = weighted_index- lag(weighted_index) - 1)
library(tidyverse)
library(rmsfuns)
library(lubridate)
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
# Now we can go ahead an calculate the monthly returns
mutate(monthly_returns_weighted = weighted_index- lag(weighted_index) - 1)
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
# Now we can go ahead an calculate the monthly returns
mutate(monthly_returns_weighted = weighted_index- lag(weighted_index) - 1) %>%
arrange(ticker) %>%
ungroup()
data_monthly_returns <-
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
# Now we can go ahead an calculate the monthly returns
mutate(monthly_returns_weighted = weighted_index- lag(weighted_index) - 1) %>%
arrange(ticker) %>%
ungroup()
View(data_monthly_returns)
data %>%
group_by(country) %>%
filter(sector = contains("Financials"))
data %>%
group_by(country) %>%
filter(sector == contains("Financials"))
data %>%
group_by(country) %>%
filter(sector == contains(financials))
data %>%
group_by(country) %>%
filter(sector == contains(Financials))
data %>%
group_by(country) %>%
filter(sector == c(Financials))
data %>%
group_by(country, sector) %>%
filter(sector == c(Financials))
View(data_monthly_returns)
data %>%
group_by(country, sector)
data_monthly_returns %>%
filter(sector %in% c("Financials"))
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, universe)
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country)
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0))
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted_no_nas, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted))
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted_no_nas, 0)) %>%
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted_no_nas, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted_no_nas))
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted_no_nas, 0)) %>%
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted_no_nas, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted_no_nas))
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted_no_nas, 0))
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted))
cumreturns_financials <-
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted))
View(cumreturns_financials)
cumreturns_financials <-
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted)) %>%
ungroup()
plot(cumreturns_financials)
library("ggplot2")
library(tidyverse)
library(rmsfuns)
library(lubridate)
View(cumreturns_financials)
View(cumreturns_financials)
monthlyreturns <-
data %>%
mutate(year_month = format(date, "%Y%B")) %>%
group_by(year_month, ticker) %>%
# Now filter to just have the last date of each month, as we are essentially calculating
#"monthly" returns
filter(date == last(date)) %>%
# Next we want to add up the market cap by sector
group_by(sector) %>%
mutate(sector_cap=sum(cap)) %>%
# Now group by ticker and
group_by(ticker) %>%
mutate(weight= cap/sector_cap) %>%
# Calculate the weighted indices by multiplying the TRI (index) by the weight above
group_by(ticker) %>%
mutate(weighted_index = index*weight) %>%
# Now we can go ahead an calculate the monthly returns
mutate(monthly_returns_weighted = weighted_index/lag(weighted_index) - 1) %>%
arrange(ticker) %>%
ungroup()
cumreturns_financials <-
data_monthly_returns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted)) %>%
ungroup()
View(cumreturns_financials)
View(cumreturns_financials)
View(data_monthly_returns)
View(monthlyreturns)
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
group_by(ticker, country) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted)) %>%
ungroup()
View(cumreturns_financials)
library(tidyverse)
library(rmsfuns)
library(lubridate)
library("ggplot2")
library("ggplot2")
View(cumreturns_financials)
View(monthlyreturns)
cumreturns_financials %>% ggplot() + group_by(country, ticker) + geom_line()
cumreturns_financials %>% group_by(country, ticker) %>% ggplot() + geom_line(aes(x=date, y=monthly_cumreturns))
cumreturns_financials %>% group_by(country, ticker) %>% ggplot() + geom_line(aes(x=date, y=monthly_cumreturns, colour = Country))
cumreturns_financials %>% group_by(country, ticker) %>% ggplot() + geom_line(aes(x=date, y=monthly_cumreturns, colour = Country))
cumreturns_financials %>% group_by(country, ticker) %>% ggplot() + geom_line(aes(x=date, y=monthly_cumreturns, colour = country))
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country, size = 1.3)) +
facet_wrap(~country, scales = "free")
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country, size = 0.8)) +
facet_wrap(~country, scales = "free")
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country, size = 0.8)) +
facet_wrap(~country, scales = "free") +
guides(colour = F)
cumreturns_financials %>%
group_by(country, ticker) %>%
cumreturns_financials %>% group_by(country, ticker)
data(cumreturns_financials) %>% group_by(country, ticker)
cumreturns_financials %>% group_by(country, ticker)
print(cumreturns_financials)
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country, size = 0.8)) +
facet_wrap(~country, scales = "free") +
guides(colour = F)
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country, size = 0.8)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
library("ggplot2")
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
group_by(country. ticker) %>%
library(tidyverse)
library(rmsfuns)
library(lubridate)
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
group_by(country. ticker) %>%
cumreturns_financials <-
monthlyreturns %>%
filter(sector %in% c("Financials")) %>%
group_by(country, ticker) %>%
mutate(monthly_returns_weighted = coalesce(monthly_returns_weighted, 0)) %>%
mutate(monthly_cumreturns = cumprod( 1 + monthly_returns_weighted)) %>%
ungroup()
library("ggplot2")
cumreturns_financials %>%
group_by(country, ticker) %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
cumreturns_financials %>%
ggplot() +
geom_line(aes(x=date, y=monthly_cumreturns, colour = country)) +
facet_wrap(~country, scales = "free") +
guides(colour = F, size = F)
